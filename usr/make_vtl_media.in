#!/bin/bash
#
# Designed to be called from mhvtl rc script
#
# * Copyright (C) 2005 Mark Harvey markh794@gmail.com
# *                                mark.harvey at veritas.com
# *
# * This program is free software; you can redistribute it and/or modify
# * it under the terms of the GNU General Public License as published by
# * the Free Software Foundation; either version 2 of the License, or
# * (at your option) any later version.
# *
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# * GNU General Public License for more details.
# *
# * You should have received a copy of the GNU General Public License
# * along with this program; if not, write to the Free Software
# * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
export PATH=/usr/bin:$PATH

if [ $# -ne 1 ]; then
	echo "Usage: $0 username"
	exit 1
fi

MHVTL_HOME_PATH=@HOME_PATH@

# Source default config file if not already set
if [ "X$MHVTL_CONFIG_PATH" == "X" ]; then
	. @CONF_PATH@/mhvtl.conf
else
	. $MHVTL_CONFIG_PATH/mhvtl.conf
fi

USER=${1:-vtl}	# Default user 'vtl'

#dry='echo'

# Test for 'runuser' used on Scientific Linux, else default with 'su'
if [ -x "$(which runuser 2>&1)" ]; then
	RUNAS=runuser
else
	RUNAS=su
fi

run() {
	if [ -x "$(which setuidgid 2>&1)" ]; then
		$dry setuidgid $USER $*
	else
		$dry $RUNAS $USER -c "$*"
	fi
}

media_type() {
	type=$1
	e0_regex='[A-Z0-9]{6,8}([J])([WXY])$'
	lto_regex='[A-Z0-9]{6,8}([L])([TUVW])$'
# default to data type
	TYPE=data

	if [[ $type =~ ^"W" ]]; then
		TYPE=`echo -e "WORM"`;
	elif [[ $type =~ ^"CLN" ]]; then
		TYPE=`echo -e "clean"`;
	# Match JW / JX as 'worm' media
	elif [[ $type =~ $e0_regex ]]; then
		TYPE=`echo -e "WORM"`;
	elif [[ $type =~ $lto_regex ]]; then
		TYPE=`echo -e "WORM"`;
	fi
}

# I'm sure there is a better method then this...
# There is.. Thanks to Gavin Barnard.
set_density() {
	density=$1
	regex='[A-Z0-9]{6,8}([SLXTJD])([1234567ABKUVWXYZ])$'
	#regex='[A-Z0-9]{4,6}([SLXTJ])([123456ABWX])[0-9]*$' # for bacula
	DENSITY=UNKNOWN

	if [[ $density =~ $regex ]]; then
		matches=${#BASH_REMATCH[*]}
		if [ ${BASH_REMATCH[1]} = 'L' ]; then
			if [ ${BASH_REMATCH[2]} = 'T' ]; then
				DENSITY=`echo -e "LTO3"`
			elif [ ${BASH_REMATCH[2]} = 'U' ]; then
				DENSITY=`echo -e "LTO4"`
			elif [ ${BASH_REMATCH[2]} = 'V' ]; then
				DENSITY=`echo -e "LTO5"`
			elif [ ${BASH_REMATCH[2]} = 'W' ]; then
				DENSITY=`echo -e "LTO6"`
			else
				DENSITY=`echo -e "LTO${BASH_REMATCH[2]}"`
			fi
		fi
		if [ ${BASH_REMATCH[1]} = 'D' ]; then
			if [ ${BASH_REMATCH[2]} = '7' ]; then
				DENSITY=`echo -e "DLT4"`;
			fi
		fi
		if [ ${BASH_REMATCH[1]} = 'S' ]; then
			if [ ${BASH_REMATCH[2]} = '3' ]; then
				DENSITY=`echo -e "SDLT600"`;
			elif [ ${BASH_REMATCH[2]} = '2' ]; then
				DENSITY=`echo -e "SDLT320"`;
			elif [ ${BASH_REMATCH[2]} = '1' ]; then
				DENSITY=`echo -e "SDLT220"`;
			else
				DENSITY=`echo -e "SDLT"`;
			fi
		fi
		if [ ${BASH_REMATCH[1]} = 'J' ]; then
			if [ ${BASH_REMATCH[2]} = 'A' ]; then
				DENSITY=`echo -e "J1A"`
			elif [ ${BASH_REMATCH[2]} = 'B' ]; then
				DENSITY=`echo -e "E05"`
			elif [ ${BASH_REMATCH[2]} = 'W' ]; then
				DENSITY=`echo -e "E05"`
			elif [ ${BASH_REMATCH[2]} = 'X' ]; then
				DENSITY=`echo -e "E05"`
			elif [ ${BASH_REMATCH[2]} = 'Y' ]; then
				DENSITY=`echo -e "E07"`
			elif [ ${BASH_REMATCH[2]} = 'K' ]; then
				DENSITY=`echo -e "E07"`
			fi
		fi
		if [ ${BASH_REMATCH[1]} = 'X' ]; then
			DENSITY=`echo -e "AIT${BASH_REMATCH[2]}"`
		fi
		if [ ${BASH_REMATCH[1]} = 'T' ]; then
			if [ ${BASH_REMATCH[2]} = 'Z' ]; then
				DENSITY=`echo -e "9840A"`;
			elif [ ${BASH_REMATCH[2]} = 'Y' ]; then
				DENSITY=`echo -e "9840B"`;
			elif [ ${BASH_REMATCH[2]} = 'X' ]; then
				DENSITY=`echo -e "9840C"`;
			elif [ ${BASH_REMATCH[2]} = 'W' ]; then
				DENSITY=`echo -e "9840D"`;
			elif [ ${BASH_REMATCH[2]} = 'V' ]; then
				DENSITY=`echo -e "9940A"`;
			elif [ ${BASH_REMATCH[2]} = 'U' ]; then
				DENSITY=`echo -e "9940B"`;
			else
				DENSITY=`echo -e "T10K${BASH_REMATCH[2]}"`
			fi
		fi
	fi
}

##################################################################
## Main starts here...
##################################################################

# Set default capacity to 500M if not defined.
CAPACITY=${CAPACITY:=500}

if [ ! -d $MHVTL_HOME_PATH ]; then
	mkdir -p $MHVTL_HOME_PATH
	chmod 750 $MHVTL_HOME_PATH
	chown $USER:$USER $MHVTL_HOME_PATH
fi

# Create any media specified in library config.
umask 002

# for LIBCONTENTS in $MHVTL_CONFIG_PATH/library_contents.*
for LIB in `awk '/Library:/ {print $2}' $MHVTL_CONFIG_PATH/device.conf`
do
	LIBCONTENTS="$MHVTL_CONFIG_PATH/library_contents.$LIB"

	for a in `cat $LIBCONTENTS|awk '/^Slot/ {print $3}' | sort -u`
	do
		set_density $a
		media_type $a
		if [ ! -d $MHVTL_HOME_PATH/$a ]; then
			run "mktape -l $LIB -s $CAPACITY -t $TYPE -m $a -d $DENSITY"
		fi
	done
done
